<?xml version="1.0"?>
<doc>
    <assembly>
        <name>healthclinic_webapi</name>
    </assembly>
    <members>
        <member name="T:healthclinic_webapi.Contexts.ClinicContext">
            <summary>
            Contexto para realizar a conexão com o banco de dados
            </summary>
        </member>
        <member name="P:healthclinic_webapi.Contexts.ClinicContext.Administrador">
            <summary>
            Instancia da tabela Administrador
            </summary>
        </member>
        <member name="P:healthclinic_webapi.Contexts.ClinicContext.Clinica">
            <summary>
            Instancia da tabela Clinica
            </summary>
        </member>
        <member name="P:healthclinic_webapi.Contexts.ClinicContext.Consulta">
            <summary>
            Instancia da tabela Consulta
            </summary>
        </member>
        <member name="P:healthclinic_webapi.Contexts.ClinicContext.Especialidade">
            <summary>
            Instancia da tabela
            </summary>
        </member>
        <member name="T:healthclinic_webapi.Controllers.AdministradorController">
            <summary>
            Controlador que tem os enpoints da entidade Administrador
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.AdministradorController.#ctor">
            <summary>
            Construtor que instancia o objeto da Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.AdministradorController.GetById(System.Guid)">
            <summary>
            Enpoint que acessa o método BuscarPorId do AdministradorRepository
            </summary>
            <param name="id">ID do paciente que sera buscado</param>
            <returns>Retorna um StatusCode(200) Ok com o objeto retornado</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.ClinicaController">
            <summary>
            Controlador com os endpoints da entidade Clinica
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ClinicaController.#ctor">
            <summary>
            Construtor que instancia o objeto da Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ClinicaController.Post(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Endpoint que acessa o método Cadastrar na ClinicaRepository
            </summary>
            <param name="clinica">Objeto que será cadastrado</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.ConsultaController">
            <summary>
            Controlador com os endpoints da entidade Consulta
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.#ctor">
            <summary>
            Construtor que instancia o objeto do repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Post(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Endpoint que acessa o método cadastrar da ConsultaRepository
            </summary>
            <param name="consulta">objeto que será cadastrado</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Get">
            <summary>
            Endpoint que acessa o método listar da ConsultaRepository
            </summary>
            <returns>Retorna a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.GetByIdPaciente(System.Guid)">
            <summary>
            Endpoint que acessa o método ListarConsultaPaciente na ConsultaRepository
            </summary>
            <param name="idPaciente">ID do paciente que terá as suas consultas listadas</param>
            <returns>Retorna as consultas daquele paciente</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.GetByIdMedico(System.Guid)">
            <summary>
            Endpoint que acessa o método ListarConsultaMedico na ConsultaRepository
            </summary>
            <param name="idMedico">ID do medico que terá as suas consultas listadas</param>
            <returns>Retorna as consultas daquele medico</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Put(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            Endpoint que acessa o método Atualizar da ConsultaRepository
            </summary>
            <param name="id">ID da consulta que será atualizada</param>
            <param name="consulta">Objeto com os novos valores</param>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ConsultaController.Delete(System.Guid)">
            <summary>
            Endpoint que acessa o método Deletar do ConsultaRepository
            </summary>
            <param name="id">ID da consulta que será deletada</param>
            <returns>Retorna um StatusCode(200) Ok</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.EspecialidadeController">
            <summary>
            Controlador com os endpoints da entidade Especialidade
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.#ctor">
            <summary>
            Construtor que instancia o objeto do Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Post(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Endpoint que acessa o método Cadastrar da EspecialidadeRepository
            </summary>
            <param name="especialidade">Objeto que será cadastrado</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Get">
            <summary>
            Enpoint que acessa o método Listar do EspecialidadeRepository
            </summary>
            <returns>Retorna um StatusCode(200) - Ok com a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.GetById(System.Guid)">
            <summary>
            Endpoint que acessa o método BuscarPorId do EspecialidadeRepository
            </summary>
            <param name="id">ID do objeto que será buscado</param>
            <returns>Retorna um StatusCode(200) - Ok com o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Put(System.Guid,healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Endpoint que acessa o método Atualizar na EspecialidadeRepository
            </summary>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.EspecialidadeController.Delete(System.Guid)">
            <summary>
            Endpoint que acessa o método Deletar da EspecialidadeRepository
            </summary>
            <param name="id">ID do usuário que será deletada</param>
            <returns>Retorna um StatusCode(204) - NoContent</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.FeedbackController">
            <summary>
            Controlador com os endpoints da entidade Feedback
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.#ctor">
            <summary>
            Construtor que instancia o objeto da repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.FeedbackController.GetByIdConsulta(System.Guid)">
            <summary>
            Endpoint que acessa o método BuscarPorIdConsulta do FeedbackRepository
            </summary>
            <param name="idConsulta">ID da consulta que o feedbakc será buscado</param>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.LoginController">
            <summary>
            Controlador para armazenar as lógicas de login
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.LoginController.#ctor">
            <summary>
            Construtor que instancia o objeto do Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.LoginController.Login(healthclinic_webapi.ViewModels.LoginViewModel)">
            <summary>
            Endpoint que acessa o método BuscarPorEmailESenha e realiza a autenticação do token de acesso
            </summary>
            <param name="usuario">ViewModel para pegar o email e senha do usuario</param>
            <returns>Retorna um StatusCode(200) - Ok com o token de acesso</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.MedicoController">
            <summary>
            Controlador que tem os Endpoints da entidade Medico
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.#ctor">
            <summary>
            Construtor que instancia o objeto da repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.MedicoController.GetById(System.Guid)">
            <summary>
            Endpoint que acessa o método BuscarPorId da Repository MedicoRepository
            </summary>
            <param name="id">ID do médico que sera buscado</param>
            <returns>Retorna um StatusCode(200) Ok</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.PacienteController">
            <summary>
            Controlador que armazena os Ednpoiints da entidade Paciente
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.#ctor">
            <summary>
            Construtor que instancia a Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PacienteController.GetById(System.Guid)">
            <summary>
            Endpoint que acessa o método BuscarPorId no PacienteRepository
            </summary>
            <param name="id">ID do paciente que será buscado</param>
            <returns>Retorna o objeto encotnrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.PlanoSaudeController">
            <summary>
            Controlador que armazena os endpoints da entidade PlanoSaude
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.#ctor">
            <summary>
            Construtor que instancia o objeto do Repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.Post(healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Endpoint que acessa o método Cadastrar do PlanoSaudeRepository
            </summary>
            <param name="planoSaude">Objeto que será cadastrado</param>
            <returns>Retorna um StatusCode(201) - Created com o objeto criado</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.Get">
            <summary>
            Endpoint que acessa o método Listar do PlanoSaudeRepository
            </summary>
            <returns>Retorna um StatusCode(200) - Ok com a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.GetById(System.Guid)">
            <summary>
            Endpoint que acessa o método BuscarPorId no PlanoSaudeRepository
            </summary>
            <param name="id">ID do plano de saúde que será buscado</param>
            <returns>Retorna um StatusCode(200) - Ok com o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.Put(System.Guid,healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Endpoint que acessa o método Atualizar no PlanoSaudeRepository
            </summary>
            <param name="id">ID do objeto que será atualizado</param>
            <param name="planoSaude">Objeto com os novos atributos</param>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.PlanoSaudeController.Delete(System.Guid)">
            <summary>
            Endpoint que acessa o método Deletar da PlanoSaudeRepository
            </summary>
            <param name="id">ID do objeto que será deletado</param>
            <returns>Retorna um StatusCode(204) - NoCOntent</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.ProntuarioController">
            <summary>
            Controlador que possue os endpoints da Entidade Prontuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ProntuarioController.#ctor">
            <summary>
            Controlador que instancia a classe do repository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.ProntuarioController.Put(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Endpoint que acessa o método Atualizar da ProntuarioRepository
            </summary>
            <param name="idPaciente">ID do paciente que terá o seu prontuário atualizado</param>
            <param name="prontuario">Objeto com os novos valores</param>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.TiposUsuarioController">
            <summary>
            Controlador com os endpoints da entidade TiposUsuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.#ctor">
            <summary>
            Construtor que instancia o objeto do repositório
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Post(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Endpoint que acessa o método Cadastrar do TiposUsuarioRepository
            </summary>
            <param name="tiposUsuario">Objeto com os atributos a serem cadastrados</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Get">
            <summary>
            Endpoint que acessa o método Listar do TiposUsuarioRepository
            </summary>
            <returns>Retorna um StatusCode(200) - Ok com a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Put(System.Guid,healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Endpoint que acessa o método Atualizar do TiposUsuarioRepository
            </summary>
            <param name="id">ID do usuário que será atualizado</param>
            <param name="tiposUsuario">Objeto com as novas informações</param>
            <returns>Retorna um StatusCode(200) - Ok</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.TiposUsuarioController.Delete(System.Guid)">
            <summary>
            Endpoint que acessa o método Deletar do TiposUsuarioRepository
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
            <returns>Retorna um StatusCode(204) - NoContent</returns>
        </member>
        <member name="T:healthclinic_webapi.Controllers.UsuarioController">
            <summary>
            Controlador com os endpoints da entidade Usuário
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.#ctor">
            <summary>
            Construtor que instancia os objetos
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.PostPaciente(healthclinic_webapi.DTOs.UsuarioPacienteDTO)">
            <summary>
            Endpoint que acessa o Método Cadastrar tanto da UsuarioRepository quanto do PacienteRepository
            </summary>
            <param name="usuarioPaciente">DTO para cadastrar um usuário do tipo paciente</param>
            <returns></returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.PostAdm(healthclinic_webapi.DTOs.UsuarioAdmDTO)">
            <summary>
            Endpoint que acessa o método Cadastrar tanto do UsuarioRepository quanto do AdministradorRepository
            </summary>
            <param name="usuarioAdm">DTO o usuário do tipo administrador</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.PostMedico(healthclinic_webapi.DTOs.UsuarioMedicoDTO)">
            <summary>
            Endpoint que acessa o método Cadastrar tanto do UsuarioRepository quanto do MedicoRepository
            </summary>
            <param name="usuarioMedico">DTO do usuário do tipo médico</param>
            <returns>Retorna um StatusCode(201) - Created</returns>
        </member>
        <member name="M:healthclinic_webapi.Controllers.UsuarioController.GetById(System.Guid)">
            <summary>
            Endpoint que busca um usuário pelo seu ID
            </summary>
            <param name="id">ID do usuário que será buscado</param>
            <returns>Retorna um StatusCode(200) - Ok com o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IAdministradorRepository">
            <summary>
            Interface que define os métodos da entidade Administrador
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IAdministradorRepository.Cadastrar(healthclinic_webapi.Domains.Administrador)">
            <summary>
            Método que cadastrar um novo ADministrador
            </summary>
            <param name="administrador">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IAdministradorRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscas um novo administrador pelo seu ID
            </summary>
            <param name="id">ID do adm que será buscado</param>
            <returns>retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IClinicaRepository">
            <summary>
            Interface que define os métodos da entidade Clinica
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IClinicaRepository.Cadastrar(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Método que cadastra uma nova clinica
            </summary>
            <param name="clinica">Objeto que será cadastrado</param>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IConsultaRepository">
            <summary>
            Interface que define os métodos da entidade Consulta
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Cadastrar(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Método para cadastrar uma nova consulta
            </summary>
            <param name="consulta">objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Listar">
            <summary>
            Método para listar todas as consultas
            </summary>
            <returns>Retorna a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.ListarConsultaMedico(System.Guid)">
            <summary>
            Método para listar as consultas ligadas a um médico
            </summary>
            <param name="idMedico">ID do médico que terá as suas consultas listadas</param>
            <returns>Retorna a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.ListarConsultaPaciente(System.Guid)">
            <summary>
            Método para listar as consultas ligada a um paciente
            </summary>
            <param name="idPaciente">ID do paciente que terá as suas consultas listadas</param>
            <returns></returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            Método para atualizar uma consulta existente
            </summary>
            <param name="id">ID da consulta que será atualizada</param>
            <param name="consulta">Objeto com os novos valores</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar uma consulta
            </summary>
            <param name="id">ID da consulta que será deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IConsultaRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar uma consulta por ID
            </summary>
            <param name="id">ID da consulta que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IEspecialidadeRepository">
            <summary>
            Interface que define os métodos da entidade Especialidade
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Cadastrar(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Método que cadastra uma nova especialidade
            </summary>
            <param name="especialidade">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Listar">
            <summary>
            Método que lista todas as especialidades
            </summary>
            <returns>Retorna uma lista com todos os objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Método que atualiza uma especialidade já existente
            </summary>
            <param name="id">ID da especialidade que será atualizada</param>
            <param name="especialidade">Objeto com as novas informações</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.Deletar(System.Guid)">
            <summary>
            Método que deleta uma especialidade
            </summary>
            <param name="id">ID da especialidade que será deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IEspecialidadeRepository.BuscarPorId(System.Guid)">
            <summary>
            Método que busca uma especialidade
            </summary>
            <param name="id">ID da especialidade que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IFeedbackRepository">
            <summary>
            Interdace que define os métodos da entidade Feedback
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.Cadastrar(healthclinic_webapi.Domains.Feedback)">
            <summary>
            Cadastra um novo Feedback
            </summary>
            <param name="feedback">objeto com os atributos a serem cadastrados</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um FeedBack
            </summary>
            <param name="idConsulta">ID da consulta que esse feedback esta ligado que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IFeedbackRepository.BuscarPorIdConsulta(System.Guid)">
            <summary>
            Método para buscar um feedback pelo seu ID
            </summary>
            <param name="idConsulta">ID da consulta que esse feedback esta ligado que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IMedicoRepository">
            <summary>
            Interface que define os métodos da entidade Medico
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.Cadastrar(healthclinic_webapi.Domains.Medico)">
            <summary>
            Método para cadastrar um novo usuário do tipo Médico
            </summary>
            <param name="medico">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IMedicoRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um Médico pelo seu ID
            </summary>
            <param name="id">ID do médico que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IPlanoSaudeRepository">
            <summary>
            Interface responsável por definir os métodos da entidade PlanoSaude
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPlanoSaudeRepository.Cadastrar(healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Método responsável por cadastrar um novo plano de saúde
            </summary>
            <param name="planoSaude">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPlanoSaudeRepository.Listar">
            <summary>
            Método para listar todos os planos de saúde
            </summary>
            <returns>Retorna uma lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPlanoSaudeRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Método para atualizar um plano de saúde existente
            </summary>
            <param name="id">ID do plano de saúde que será atualizado</param>
            <param name="planoSaude">Objeto com os novos atributos</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPlanoSaudeRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um plano de saúde existente
            </summary>
            <param name="id">ID do plano de saúde que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IPlanoSaudeRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um plano de saúde pelo seu ID
            </summary>
            <param name="id">ID do plano de saúde que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IProntuarioRepository">
            <summary>
            Interface que define os métodos da entidade Prontuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.Cadastrar(healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Método para cadastrar um novo prontuário
            </summary>
            <param name="prontuario">objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Método para atualizar um prontuário
            </summary>
            <param name="id">ID do prontuario que será atualizado</param>
            <param name="prontuario">Objeto com os novos atributos</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um prontuário pelo seu ID
            </summary>
            <param name="id">ID do prontuário que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IProntuarioRepository.BuscarPorIdPaciente(System.Guid)">
            <summary>
            Método para buscar um prontuário pelo ID do usuario ligado a ele
            </summary>
            <param name="idPaciente">ID do usuario que terá o seu prontuáro buscado</param>
            <returns>retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.ITiposUsuarioRepository">
            <summary>
            Interface responsável por definir os métodos da entidade TiposUsuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Método para cadastrar um novo tipo de usuário
            </summary>
            <param name="tiposUsuario">Objeto com os novos atributos a serem cadastrados</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Listar">
            <summary>
            Método que lista todos os tipos de usuários
            </summary>
            <returns>Retorna uma lista com todos os objetos da tabela</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Método para atualizar um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será atualizado</param>
            <param name="tiposUsuario">objeto com os novos atributos que vão sobrepor os antigos</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um tipo de usuário
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.ITiposUsuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um objeto TiposUsuario pelo seu ID
            </summary>
            <param name="id">ID do objeto que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Interfaces.IUsuarioRepository">
            <summary>
            Interface que defini os métodos da entidade Usuario
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.Usuario)">
            <summary>
            Método para cadastrar um novo usuário
            </summary>
            <param name="usuario">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IUsuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um usuário pelo seu ID
            </summary>
            <param name="id">ID do usário que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Interfaces.IUsuarioRepository.BuscarPorEmailESenha(System.String,System.String)">
            <summary>
            Método para buscar um usuário pelo seu Email e Senha
            </summary>
            <param name="email">Email do usuário que será buscado</param>
            <param name="senha">Senha do usuário que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Migrations.bd_v1">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v1.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v1.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v1.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Migrations.bd_v2">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v2.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v2.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:healthclinic_webapi.Migrations.bd_v2.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:healthclinic_webapi.Repositories.AdministradorRepository">
            <summary>
            Repository que herda os métodos da Interdface IAdministradorRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.AdministradorRepository.#ctor">
            <summary>
            Construtor que instancia os métodos da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.AdministradorRepository.Cadastrar(healthclinic_webapi.Domains.Administrador)">
            <summary>
            Método que cadastrar um novo ADministrador
            </summary>
            <param name="administrador">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.AdministradorRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscas um novo administrador pelo seu ID
            </summary>
            <param name="id">ID do adm que será buscado</param>
            <returns>retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.ClinicaRepository">
            <summary>
            Repository que herda os métodos da interface IClinicaRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ClinicaRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ClinicaRepository.Cadastrar(healthclinic_webapi.Domains.Clinica)">
            <summary>
            Método que cadastra uma nova clinica
            </summary>
            <param name="clinica">Objeto que será cadastrado</param>
        </member>
        <member name="T:healthclinic_webapi.Repositories.ConsultaRepository">
            <summary>
            Repositório que herda os métodos da interface IConsultaRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Cadastrar(healthclinic_webapi.Domains.Consulta)">
            <summary>
            Método para cadastrar uma nova consulta
            </summary>
            <param name="consulta">objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Listar">
            <summary>
            Método para listar todas as consultas
            </summary>
            <returns>Retorna a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.ListarConsultaMedico(System.Guid)">
            <summary>
            Método para listar as consultas ligadas a um médico
            </summary>
            <param name="idMedico">ID do médico que terá as suas consultas listadas</param>
            <returns>Retorna a lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.ListarConsultaPaciente(System.Guid)">
            <summary>
            Método para listar as consultas ligada a um paciente
            </summary>
            <param name="idPaciente">ID do paciente que terá as suas consultas listadas</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Consulta)">
            <summary>
            Método para atualizar uma consulta existente
            </summary>
            <param name="id">ID da consulta que será atualizada</param>
            <param name="consulta">Objeto com os novos valores</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar uma consulta
            </summary>
            <param name="id">ID da consulta que será deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ConsultaRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar uma consulta por ID
            </summary>
            <param name="id">ID da consulta que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.EspecialidadeRepository">
            <summary>
            Repostirio que herda os métodos definidos na interface IEspecialidadeRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Cadastrar(healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Método que cadastra uma nova especialidade
            </summary>
            <param name="especialidade">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Listar">
            <summary>
            Método que lista todas as especialidades
            </summary>
            <returns>Retorna uma lista com todos os objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Especialidade)">
            <summary>
            Método que atualiza uma especialidade já existente
            </summary>
            <param name="id">ID da especialidade que será atualizada</param>
            <param name="especialidade">Objeto com as novas informações</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.Deletar(System.Guid)">
            <summary>
            Método que deleta uma especialidade
            </summary>
            <param name="id">ID da especialidade que será deletada</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.EspecialidadeRepository.BuscarPorId(System.Guid)">
            <summary>
            Método que busca uma especialidade
            </summary>
            <param name="id">ID da especialidade que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.FeedbackRepository">
            <summary>
            Repository que herda os métodos da interface IFeedbackRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.Cadastrar(healthclinic_webapi.Domains.Feedback)">
            <summary>
            Cadastra um novo Feedback
            </summary>
            <param name="feedback">objeto com os atributos a serem cadastrados</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um FeedBack
            </summary>
            <param name="idConsulta">ID da consulta que esse feedback esta ligado que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.FeedbackRepository.BuscarPorIdConsulta(System.Guid)">
            <summary>
            Método para buscar um feedback pelo seu ID
            </summary>
            <param name="idConsulta">ID da consulta que esse feedback esta ligado que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.MedicoRepository">
            <summary>
            Repository que armazena os métodos
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.#ctor">
            <summary>
            Construtor que instancia a Context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.Cadastrar(healthclinic_webapi.Domains.Medico)">
            <summary>
            Método para cadastrar um novo usuário do tipo Médico
            </summary>
            <param name="medico">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.MedicoRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um Médico pelo seu ID
            </summary>
            <param name="id">ID do médico que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.PacienteRepository">
            <summary>
            Repository que herda os métodos da interface IPacienteRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.#ctor">
            <summary>
            Construtor que Instancia os objetos
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.Cadastrar(healthclinic_webapi.Domains.Paciente)">
            <summary>
            Método para cadastrar um Paciente e um prontuáro ja ligado a esse paciente
            </summary>
            <param name="paciente">Objeto do paciente que será cadastradi</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PacienteRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um paciente pelo seu ID
            </summary>
            <param name="id">ID do paciente que será buscada</param>
            <returns>retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.PlanoSaudeRepository">
            <summary>
            Repository que herda os métodos da interface IPlanoSaudeRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da Context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.Cadastrar(healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Método responsável por cadastrar um novo plano de saúde
            </summary>
            <param name="planoSaude">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.Listar">
            <summary>
            Método para listar todos os planos de saúde
            </summary>
            <returns>Retorna uma lista de objetos</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.PlanoSaude)">
            <summary>
            Método para atualizar um plano de saúde existente
            </summary>
            <param name="id">ID do plano de saúde que será atualizado</param>
            <param name="planoSaude">Objeto com os novos atributos</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um plano de saúde existente
            </summary>
            <param name="id">ID do plano de saúde que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.PlanoSaudeRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um plano de saúde pelo seu ID
            </summary>
            <param name="id">ID do plano de saúde que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.ProntuarioRepository">
            <summary>
            Repository que herda os métodos da interface IPronturarioRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.#ctor">
            <summary>
            construtor que instancia a Context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.Cadastrar(healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Método para cadastrar um novo prontuário
            </summary>
            <param name="prontuario">objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.Prontuario)">
            <summary>
            Método para atualizar um prontuário
            </summary>
            <param name="id">ID do paciente que tera o prontuario que será atualizado</param>
            <param name="prontuario">Objeto com os novos atributos</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um prontuário pelo seu ID
            </summary>
            <param name="id">ID do prontuário que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.ProntuarioRepository.BuscarPorIdPaciente(System.Guid)">
            <summary>
            Método para buscar um prontuário pelo ID do usuario ligado a ele
            </summary>
            <param name="idPaciente">ID do usuario que terá o seu prontuáro buscado</param>
            <returns>retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.TiposUsuarioRepository">
            <summary>
            Repostirio que herda os métodos definidos na interface ITiposUsuarioRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.#ctor">
            <summary>
            Construtor que instancia a classe do contexto
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Cadastrar(healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Método para cadastrar um novo tipo de usuário
            </summary>
            <param name="tiposUsuario">Objeto com os novos atributos a serem cadastrados</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Listar">
            <summary>
            Método que lista todos os tipos de usuários
            </summary>
            <returns>Retorna uma lista com todos os objetos da tabela</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Atualizar(System.Guid,healthclinic_webapi.Domains.TiposUsuario)">
            <summary>
            Método para atualizar um tipo de usuário existente
            </summary>
            <param name="id">ID do tipo de usuário que será atualizado</param>
            <param name="tiposUsuario">objeto com os novos atributos que vão sobrepor os antigos</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.Deletar(System.Guid)">
            <summary>
            Método para deletar um tipo de usuário
            </summary>
            <param name="id">ID do tipo de usuário que será deletado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.TiposUsuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um objeto TiposUsuario pelo seu ID
            </summary>
            <param name="id">ID do objeto que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="T:healthclinic_webapi.Repositories.UsuarioRepository">
            <summary>
            Repository que herda os métodos da interface IUsuarioRepository
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.#ctor">
            <summary>
            Construtor que instancia o objeto da context
            </summary>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.Cadastrar(healthclinic_webapi.Domains.Usuario)">
            <summary>
            Método para cadastrar um novo usuário
            </summary>
            <param name="usuario">Objeto que será cadastrado</param>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.BuscarPorEmailESenha(System.String,System.String)">
            <summary>
            Método para buscar um usuário pelo seu Email e Senha
            </summary>
            <param name="email">Email do usuário que será buscado</param>
            <param name="senha">Senha do usuário que será buscada</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
        <member name="M:healthclinic_webapi.Repositories.UsuarioRepository.BuscarPorId(System.Guid)">
            <summary>
            Método para buscar um usuário pelo seu ID
            </summary>
            <param name="id">ID do usário que será buscado</param>
            <returns>Retorna o objeto encontrado</returns>
        </member>
    </members>
</doc>
